import requests
url = 'https://management.azure.com/batch?api-version=2020-06-01'
payload = r'''{"requests":[{"content":{"query":"resources|where type =~ \"microsoft.automation/automationaccounts\"\r\n| project name, resourceGroup, kind, location, id, type, subscriptionId, tags\r\n|extend typeDisplayName=case(type =~ 'microsoft.automation/automationaccounts','Automation Account',type)|extend locationDisplayName=case(location =~ 'eastus','East US',location =~ 'eastus2','East US 2',location =~ 'southcentralus','South Central US',location =~ 'westus2','West US 2',location =~ 'westus3','West US 3',location =~ 'australiaeast','Australia East',location =~ 'southeastasia','Southeast Asia',location =~ 'northeurope','North Europe',location =~ 'swedencentral','Sweden Central',location =~ 'uksouth','UK South',location =~ 'westeurope','West Europe',location =~ 'centralus','Central US',location =~ 'southafricanorth','South Africa North',location =~ 'centralindia','Central India',location =~ 'eastasia','East Asia',location =~ 'japaneast','Japan East',location =~ 'koreacentral','Korea Central',location =~ 'canadacentral','Canada Central',location =~ 'francecentral','France Central',location =~ 'germanywestcentral','Germany West Central',location =~ 'norwayeast','Norway East',location =~ 'brazilsouth','Brazil South',location =~ 'centralusstage','Central US (Stage)',location =~ 'eastusstage','East US (Stage)',location =~ 'eastus2stage','East US 2 (Stage)',location =~ 'northcentralusstage','North Central US (Stage)',location =~ 'southcentralusstage','South Central US (Stage)',location =~ 'westusstage','West US (Stage)',location =~ 'westus2stage','West US 2 (Stage)',location =~ 'asia','Asia',location =~ 'asiapacific','Asia Pacific',location =~ 'australia','Australia',location =~ 'brazil','Brazil',location =~ 'canada','Canada',location =~ 'europe','Europe',location =~ 'france','France',location =~ 'germany','Germany',location =~ 'global','Global',location =~ 'india','India',location =~ 'japan','Japan',location =~ 'korea','Korea',location =~ 'norway','Norway',location =~ 'southafrica','South Africa',location =~ 'switzerland','Switzerland',location =~ 'uae','United Arab Emirates',location =~ 'uk','United Kingdom',location =~ 'unitedstates','United States',location =~ 'unitedstateseuap','United States EUAP',location =~ 'eastasiastage','East Asia (Stage)',location =~ 'southeastasiastage','Southeast Asia (Stage)',location =~ 'northcentralus','North Central US',location =~ 'westus','West US',location =~ 'jioindiawest','Jio India West',location =~ 'switzerlandnorth','Switzerland North',location =~ 'uaenorth','UAE North',location =~ 'westcentralus','West Central US',location =~ 'southafricawest','South Africa West',location =~ 'australiacentral','Australia Central',location =~ 'australiacentral2','Australia Central 2',location =~ 'australiasoutheast','Australia Southeast',location =~ 'japanwest','Japan West',location =~ 'jioindiacentral','Jio India Central',location =~ 'koreasouth','Korea South',location =~ 'southindia','South India',location =~ 'westindia','West India',location =~ 'canadaeast','Canada East',location =~ 'francesouth','France South',location =~ 'germanynorth','Germany North',location =~ 'norwaywest','Norway West',location =~ 'switzerlandwest','Switzerland West',location =~ 'ukwest','UK West',location =~ 'uaecentral','UAE Central',location =~ 'brazilsoutheast','Brazil Southeast',location)|extend subscriptionDisplayName=case(subscriptionId =~ '6f5f8fcf-a825-455a-8b79-3562e43c6748','Lucas-MS Azure Internal Subscription',subscriptionId)|where (type !~ ('dynatrace.observability/monitors'))|where (type !~ ('nginx.nginxplus/nginxdeployments'))|where (type !~ ('microsoft.agfoodplatform/farmbeats'))|where (type !~ ('microsoft.cdn/profiles/afdendpoints'))|where (type !~ ('microsoft.cdn/profiles/customdomains'))|where (type !~ ('microsoft.cdn/profiles/origingroups'))|where (type !~ ('microsoft.cdn/profiles/rulesets'))|where (type !~ ('microsoft.cdn/profiles/secrets'))|where (type !~ ('microsoft.cdn/profiles/securitypolicies'))|where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))|where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))|where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))|where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))|where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))|where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))|where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))|where (type !~ ('microsoft.portal/extensions/deployments'))|where (type !~ ('microsoft.portal/extensions'))|where (type !~ ('microsoft.portal/extensions/slots'))|where (type !~ ('microsoft.portal/extensions/versions'))|where (type !~ ('microsoft.datacollaboration/workspaces'))|where (type !~ ('microsoft.network/dnsforwardingrulesets'))|where (type !~ ('microsoft.network/dnsresolvers'))|where (type !~ ('microsoft.communication/emailservices/domains'))|where (type !~ ('microsoft.communication/emailservices'))|where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))|where (type !~ ('microsoft.hdinsight/clusterpools/clusters/sessionclusters'))|where (type !~ ('microsoft.hdinsight/clusterpools'))|where (type !~ ('microsoft.hpcworkbench/instances'))|where (type !~ ('microsoft.scvmm/vmmservers'))|where (type !~ ('microsoft.scvmm/virtualmachines'))|where (type !~ ('microsoft.metaverse/metaverses'))|where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))|where (type !~ ('microsoft.scom/managedinstances'))|where (type !~ ('microsoft.orbital/spacecrafts/contacts'))|where (type !~ ('microsoft.orbital/contactprofiles'))|where (type !~ ('microsoft.orbital/edgesites'))|where (type !~ ('microsoft.orbital/groundstations'))|where (type !~ ('microsoft.orbital/l2connections'))|where (type !~ ('microsoft.orbital/spacecrafts'))|where (type !~ ('microsoft.azurepercept/accounts'))|where (type !~ ('microsoft.workloads/phpworkloads'))|where (type !~ ('microsoft.playfab/playeraccountpools'))|where (type !~ ('microsoft.playfab/playfabresources'))|where (type !~ ('microsoft.playfab/titles'))|where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))|where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))|where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))|where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))|where (type !~ ('microsoft.recoveryservicesintd/vaults'))|where (type !~ ('microsoft.recoveryservicesintd2/vaults'))|where (type !~ ('microsoft.billingbenefits/savingsplanorders/savingsplans'))|where (type !~ ('microsoft.billingbenefits/savingsplanorders'))|where (type !~ ('microsoft.deploymentmanager/rollouts'))|where (type !~ ('microsoft.workloads/sapvirtualinstances/applicationinstances'))|where (type !~ ('microsoft.workloads/sapvirtualinstances/centralinstances'))|where (type !~ ('microsoft.workloads/sapvirtualinstances/databaseinstances'))|where (type !~ ('microsoft.workloads/sapvirtualinstances'))|where (type !~ ('microsoft.datareplication/replicationvaults'))|where (type !~ ('microsoft.storagecache/amlfilesystems'))|where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))|where (type !~ ('microsoft.testbase/testbaseaccounts/packages'))|where (type !~ ('microsoft.workloads/monitors'))|where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))|where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))|project name,typeDisplayName,resourceGroup,locationDisplayName,subscriptionDisplayName,id,type,kind,location,subscriptionId,tags|sort by (tolower(tostring(name))) asc","options":{"$top":100,"$skip":0,"$skipToken":""},"subscriptions":["6f5f8fcf-a825-455a-8b79-3562e43c6748"]},"httpMethod":"POST","name":"5da28f0c-4098-4645-bccb-d57759eb2058","requestHeaderDetails":{"commandName":"HubsExtension.BrowseResource.Microsoft.Automation/AutomationAccounts.Refresh"},"url":"https://management.azure.com/providers/Microsoft.ResourceGraph/resources?api-version=2018-09-01-preview"}]}'''

bearer_token = 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJodHRwczovL21hbmFnZW1lbnQuY29yZS53aW5kb3dzLm5ldC8iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNjQ4NjQ1NDUxLCJuYmYiOjE2NDg2NDU0NTEsImV4cCI6MTY0ODY0OTY4MSwiX2NsYWltX25hbWVzIjp7Imdyb3VwcyI6InNyYzEifSwiX2NsYWltX3NvdXJjZXMiOnsic3JjMSI6eyJlbmRwb2ludCI6Imh0dHBzOi8vZ3JhcGgud2luZG93cy5uZXQvNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3L3VzZXJzL2Y4Y2M4NTRkLWI2ZDMtNGNiZi05NWM3LTg1YmI2OTk3Mjc5ZC9nZXRNZW1iZXJPYmplY3RzIn19LCJhY3IiOiIxIiwiYWlvIjoiQVZRQXEvOFRBQUFBbEU0Ty8zbUlPRkF0SzVES05QcnJrUjFxQ2t0N1hSYUI0Wm5LNXNjUmhSa0VicU8xNWRjWjFzUGdyMEEvb0N2NmpHTmNSSUVGSXJqU05ib0NiSHRISGI2UmZqMVRJZlBvRXBBbFNmU2Y4YXM9IiwiYW1yIjpbInJzYSIsIm1mYSJdLCJhcHBpZCI6ImM0NGI0MDgzLTNiYjAtNDljMS1iNDdkLTk3NGU1M2NiZGYzYyIsImFwcGlkYWNyIjoiMiIsImRldmljZWlkIjoiMWY5N2I0NmItNDY1NC00ZmM0LTg3MTctNTllYzI5NzU2NTg4IiwiZmFtaWx5X25hbWUiOiJIdWFuZyIsImdpdmVuX25hbWUiOiJMdWNhcyIsImlwYWRkciI6IjE2Ny4yMjAuMjU1Ljk0IiwibmFtZSI6Ikx1Y2FzIEh1YW5nIiwib2lkIjoiZjhjYzg1NGQtYjZkMy00Y2JmLTk1YzctODViYjY5OTcyNzlkIiwib25wcmVtX3NpZCI6IlMtMS01LTIxLTIxNDY3NzMwODUtOTAzMzYzMjg1LTcxOTM0NDcwNy0yNzY5NjA5IiwicHVpZCI6IjEwMDMyMDAwRDJCRUMzQzAiLCJyaCI6IjAuQVJvQXY0ajVjdkdHcjBHUnF5MTgwQkhiUjBaSWYza0F1dGRQdWtQYXdmajJNQk1hQU1vLiIsInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6IjQxVnVabGUxRW01QVBkdnV0LS1seEREQU9QWDFWQ05ubUVsTlF1eVBPc28iLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1bmlxdWVfbmFtZSI6Imx1Y2FzaHVhbmdAbWljcm9zb2Z0LmNvbSIsInVwbiI6Imx1Y2FzaHVhbmdAbWljcm9zb2Z0LmNvbSIsInV0aSI6IlNpYVp1TTVkRGtLamhnR0QtUG9OQUEiLCJ2ZXIiOiIxLjAiLCJ4bXNfdGNkdCI6MTI4OTI0MTU0N30.FbR__CBJFHgg5MiQecxeR2bjLvxdIdfqNWneNaexUoOxAVKdVgAXqFW1eGV3mASfLxF93JkqMe32EjFLzBaYA7fMUAtQ3gd06RxsZmw2R5Oy54n-yoKdURwlTh6wZb1Wrl82PJ3uP9E0xkjxDRWeZ9dfhJ8OaGVH2qT80VVAGJOxxeHizqOFGWalhX-QfhRKILvJtl-JrZlBb9RBXAQ239tnpkLsdhIhxv1wI8Lx35XsoyksXLd4u854OYYmm8InN1AWEVVFO5pXwi9euvlQAog8CR6ug8orJksFrnr5lWElAUVmCDNB1nEAlLSmKd014EsQiEehHL5fK1sTjF3P8g'
headers = {'content-type': 'application/json', 'Accept-Charset': 'UTF-8','Authorization':bearer_token}
r = requests.post(url, data=payload, headers=headers)
print (r.text)
